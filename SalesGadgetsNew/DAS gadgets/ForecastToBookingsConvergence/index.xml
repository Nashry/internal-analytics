<?xml version="1.0" encoding="UTF-8" ?>
<Module>
    <ModulePrefs title="Forecast to Bookings Convergence" height="250" description="subg">
        <Require feature="pubsub-2">
            <Param name="topics">
                <![CDATA[
                <Topic title="geodata"
                    name="org.wso2.ues.samples2.ch"
                    description="sample channel to demonstrate intergadget communication"
                    type="object"
                    subscribe="true"/>
               ]]>
            </Param>
        </Require>
        <Require feature="dynamic-height"/>
    </ModulePrefs>
    <Content type="html">
        <![CDATA[
        <head>
            <link rel="stylesheet" href="/portal/css/igviz.css">
            <link rel="stylesheet" href="/portal/css/bootstrap.min.css">
            <link rel="stylesheet" href="/portal/css/charts.css">
            <script src="/portal/js/jquery.min.js"></script>
            <script src="/portal/js/bootstrap.min.js"></script>
            <script src="/portal/js/date.js"></script>
            <script src="/portal/js/d3.min.js"> </script>
            <script src="/portal/js/vega.js"> </script>
            <script src="/portal/js/igviz.js"> </script>
            <script language="javascript" type="text/javascript" src="/portal/js/jquery-1.10.2.js"></script>
            <script>
                var input = []; 
                input[0]= 2014;
                input[1]= 3;
                input[2]= 8;
                input[3]= "false";


	            gadgets.HubSettings.onConnect = function() {
                //subscribe to channel to get data
		            gadgets.Hub.subscribe('state-selected', function(topic, data, subscriberData) {

                        if (typeof data.year !== 'undefined'){
                            input[0]=data.year;
                        }
                        if (typeof data.fullYear !== 'undefined'){
                            input[3]=data.fullYear;
                        }           
                        if (typeof data.quarter !== 'undefined'){
                            input[1]=data.quarter;
                        }
                        if (typeof data.month !== 'undefined'){
                            input[2]=data.month;
                        }
            		    input[4]="none";
                    //POST data to hosted jaggery files
      			        $.post( "http://10.100.4.35:9763/SalesGadgets/DataGlobal.jag", 
                            {"entYear":input[0],"Quarter":input[1],"Month":input[2],"FullYear":input[3],"AccManager":input[4]},
                            function( data ) {
                                DrawGraph(data);
            		        }
                        );
                    });
                };

            //function to draw graph
                function DrawGraph(DataProductPipeline)
                {

                    console.log('starting the script');
                //Get the data from hosted jaggery files and parse it                      
                    var newDataProductPipeline = JSON.parse(DataProductPipeline);

                    var dataTableProductPipeline= {
                                            "metadata":{
                                                "names":["Opportunity","Week No","Amount"],
                                                "types":['C','N','N']
                                            },
                                            "data": newDataProductPipeline
                                    }
                //set height and width of the chart
                    var width= 270;
                    var height = 270;     

                    console.log("this is the dataTableProductPipeline"+newDataProductPipeline);

                    var configProductPipeline ={
                                            "title": "Projects by Opportunity_Status__c,weekNo,Amount",
                                            "yAxis": 2,
                                            "xAxis": 1,
                                            "groupedBy":0,
                                            "width": width,
                                            "height": height,
                                            "chartType": "bar",
                                            "format":"stacked",
                                            "padding" : "0px"
                                        }    
                //Drawing stacked bar chart in the div id=Pipeline                              
                    chart=igviz.setUp("#pipeline",configProductPipeline,dataTableProductPipeline);
                    chart.setXAxis({title: "Week No"});
                    chart.setYAxis({title: "Amount  ($millions)"});
                    chart.plot(dataTableProductPipeline.data)
                    window.onresize=function(){chart.resize()};
                    console.log("later i am here");
                }

            </script>
        </head>
        <body padding="0px">
            <div id="pipeline" class="col-lg-6" align="left" style="padding:0px;width:300px"></div>
        </body>
        ]]>
    </Content>
</Module>
